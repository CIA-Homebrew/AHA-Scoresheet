extends layout

block content
  unless user
    .container
      .logo_holder.mx-auto.text-center
        img.img-fluid.d-inline-block(
          src="/images/page-logos/club-logo.png",
          alt="Logo",
          height="400px"
        )
        img.img-fluid.d-inline-block(
          src="/images/page-logos/comp-logo.png",
          alt="Logo",
          height="400px"
        )
      h1.text-center Welcome!
      p.text-center Welcome to the Cane Island Alers Digital Scoresheet Manager. Please use the menu above to navigate to your desired action.

  else
    .container
      .card
        .card-header
          .d-flex.justify-content-between
            h2.ml-3 My Flights
            ul#scoresheet-list.nav.nav-pills(role="tablist")
              li.nav-item(role="presentation")
                a#inProgressTab.nav-link.px-5.active(
                  data-toggle="pill",
                  href="#inProgress",
                  aria-controls="inProgress",
                  aria-selected="true"
                ) Show In Progress Flights
              li.nav-item(role="presentation")
                a#completedTab.nav-link.px-5(
                  data-toggle="pill",
                  href="#completed",
                  aria-controls="completed",
                  aria-selected="false"
                ) Show Completed Flights
        .card-body
          .tab-content
            #inProgress.tab-pane.fade.show.active(
              role="tabpane2",
              aria-labelledby="inProgressTab"
            )
              #inProgressAccordian.accordian
                - var unsubmittedFlights = Object.values(flights).filter((flight) => !flight.submitted);
                if unsubmittedFlights.length
                  each flight, index in unsubmittedFlights
                    - var isLastFlight = unsubmittedFlights.length - 1 === index;
                    .card
                      .card-header(
                        id='header' + flight.id,
                        style="background-color: rgba(124,122,120,0.35"
                      )
                        .d-flex.flex-row.justify-content-between.p-0.m-0.panel-title(
                          type="button",
                          data-toggle="collapse",
                          data-target='#collapse' + flight.id,
                          aria-expanded=isLastFlight ? 'true' : 'false',
                          aria-controls="collapseOne",
                          class=isLastFlight ? 'collapsed' : ''
                        ) 
                          h5.m-0.p-0 <strong>Flight ##{flight.flight_id}</strong> <small>&nbsp; &nbsp; &nbsp; #{new Date(flight.date).toLocaleDateString()} &nbsp; &nbsp; &nbsp; #{flight.location}</small>
                      div(
                        id='collapse' + flight.id,
                        aria-labelledby='header' + flight.id,
                        data-parent="#inProgressAccordian",
                        class=isLastFlight ? 'collapse show' : 'collapse'
                      )
                        .card-body
                          table.table.table-hover.table-borderless
                            thead
                              tr
                                th(scope="col") Entry #
                                th(scope="col") Category
                                th.text-center(scope="col") Judge Score
                                th.text-center(scope="col") Consensus Score
                                th.text-center(scope="col") Place / Advance
                                th.text-center(scope="col") MiniBOS Advance
                                th(scope="col")
                            tbody
                              if flight.scoresheets.length
                                each scoresheet in flight.scoresheets
                                  tr
                                    td(scope="row") #{scoresheet.entry_number}
                                    td #{scoresheet.category + scoresheet.sub} - #{scoresheet.subcategory}
                                    td.text-center
                                      input.form-control.text-center(
                                        type="number",
                                        value=scoresheet.judge_total,
                                        disabled
                                      )
                                    td.text-center
                                      input.form-control.text-center(
                                        type="number",
                                        value=scoresheet.consensus_score,
                                        onchange=`updateScoresheet('${scoresheet.id}', 'consensus_score', this.value)`
                                      )
                                    td.text-center
                                      select.form-control(
                                        onchange=`updateScoresheet('${scoresheet.id}', 'place', this.value)`
                                      )
                                        option -
                                        option(
                                          value=1,
                                          selected=scoresheet.place === 1
                                        ) 1st
                                        option(
                                          value=2,
                                          selected=scoresheet.place === 2
                                        ) 2nd
                                        option(
                                          value=3,
                                          selected=scoresheet.place === 3
                                        ) 3rd
                                    td.text-center 
                                      .btn-group-toggle(data-toggle="buttons")
                                        label.btn.btn-outline-success(
                                          class=Boolean(scoresheet.mini_boss_advanced) ? 'active' : ''
                                        ) Advance
                                          input#mini_boss_advanced(
                                            type="checkbox",
                                            autocomplete="off",
                                            name="mini_boss_advanced",
                                            checked=Boolean(scoresheet.mini_boss_advanced),
                                            onchange=`updateScoresheet('${scoresheet.id}', 'mini_boss_advanced', this.checked)`
                                          )
                                    td.text-center
                                      button.btn.btn-primary(
                                        onclick=`editEntry('${scoresheet.id}')`
                                      ) Edit
                              else
                                p.text-center.text-muted No scoresheets in this flight yet. Want to #[a.link-style(onClick=`addEntry('${flight.id}')`) add one]?

                          .d-flex.flex-row
                            button.mt-3.mr-2.btn.btn-primary(
                              type="button",
                              onClick=`addEntry('${flight.id}')`
                            ) Add Scoresheet
                            button.mt-3.btn.btn-danger(
                              type="button",
                              onClick=`confirmSubmitFlight('${flight.id}')`
                            ) Submit Flight
                else
                  p.text-center.text-muted No flights to display. Want to #[a.link-style(onClick="showAddFlightModal()") add one]?
              button.mt-3.btn.btn-primary(
                type="button",
                onClick="showAddFlightModal()"
              ) Add New Flight
            #completed.tab-pane.fade(
              role="tabpane1",
              aria-labelledby="completedTab"
            )
              - var submittedFlights = Object.values(flights).filter((flight) => flight.submitted);
              if submittedFlights.length
                each flight, index in submittedFlights
                  - var isLastFlight = submittedFlights.length - 1 === index;
                  .card
                    .card-header(
                      id='header' + flight.id,
                      style="background-color: rgba(124,122,120,0.35"
                    )
                      .d-flex.flex-row.justify-content-between.panel-title(
                        type="button",
                        data-toggle="collapse",
                        data-target='#collapse' + flight.id,
                        aria-expanded=isLastFlight ? 'true' : 'false',
                        aria-controls="collapseOne",
                        class=isLastFlight ? 'collapsed' : ''
                      ) 
                        h5.m-0.p-0 <strong>Flight #{flight.flight_id}</strong> <small> &nbsp; &nbsp; &nbsp; #{new Date(flight.date).toLocaleDateString()} &nbsp; &nbsp; &nbsp; #{flight.location}</small>
                    div(
                      id='collapse' + flight.id,
                      aria-labelledby='header' + flight.id,
                      data-parent="#inProgressAccordian",
                      class=isLastFlight ? 'collapse show' : 'collapse'
                    )
                      .card-body
                        table.table.table-hover.table-borderless
                          thead
                            tr
                              th(scope="col") Entry #
                              th(scope="col") Category
                              th.text-center(scope="col") Judge Score
                              th.text-center(scope="col") Consensus Score
                              th.text-center(scope="col") Placed / Advanced
                              th.text-center(scope="col") MiniBOS Advanced
                              th(scope="col")
                          tbody
                            each scoresheet in flight.scoresheets
                              tr
                                td(scope="row") #{scoresheet.entry_number}
                                td #{scoresheet.category + scoresheet.sub} - #{scoresheet.subcategory}
                                td.text-center
                                  input.form-control.text-center(
                                    type="number",
                                    value=scoresheet.judge_total,
                                    disabled
                                  )
                                td.text-center
                                  input.form-control.text-center(
                                    type="number",
                                    value=scoresheet.consensus_score,
                                    disabled
                                  )
                                td.text-center
                                  select.form-control(disabled)
                                    option -
                                    option(
                                      value=0,
                                      selected=scoresheet.place === 0
                                    ) Advance
                                    option(
                                      value=1,
                                      selected=scoresheet.place === 1
                                    ) 1st
                                    option(
                                      value=2,
                                      selected=scoresheet.place === 2
                                    ) 2nd
                                    option(
                                      value=3,
                                      selected=scoresheet.place === 3
                                    ) 3rd
                                td.text-center 
                                  .btn-group-toggle(data-toggle="buttons")
                                    label.btn.btn-outline-success.no-hover(
                                      class=Boolean(scoresheet.mini_boss_advanced) ? 'active' : ''
                                    ) Advance
                                      input#mini_boss_advanced(
                                        type="checkbox",
                                        autocomplete="off",
                                        name="mini_boss_advanced",
                                        checked=Boolean(scoresheet.mini_boss_advanced),
                                        disabled
                                      )
                                td.text-center
                                  button.btn.btn-primary(
                                    id=`download-${scoresheet.id}`,
                                    type="button",
                                    onclick=`downloadPdf('${scoresheet.id}', '${scoresheet.entry_number}')`
                                  ) PDF
                        .d-flex.flex-row
                          button.mt-3.mr-2.btn.btn-primary(
                            id=`download-all-${flight.id}`,
                            type="button",
                            onClick=`downloadAll([${flight.scoresheets.map((scoresheet) => "{id:'" + scoresheet.id + "', entry_number: '" + scoresheet.entry_number + "'}").join(',')}], "${flight.id}")`
                          ) Download All
              else
                p.text-center.text-muted No submitted flights (yet)

    #addFlightModal.modal.fade(
      tabindex="-1",
      role="dialog",
      aria-labelledby="addFlightModalLabel",
      aria-hidden="true"
    )
      .modal-dialog
        .modal-content
          .modal-header 
            h5 Add New Flight
          .modal-body
            .form-group
              label(for="flightName") Flight ID
              input#flightName.form-control(
                type="text",
                placeholder="6 character flight ID found on the flight sheet"
              )
            .form-group
              label(for="flightLocation") Judging Location
              input#flightLocation.form-control(
                type="text",
                placeholder="Brewery, Local Homebrew Shop, Home, etc."
              )
            .form-group
              label(for="flightDate") Session Date
              - var date = new Date();
              - var currentDate = date.getUTCFullYear() + '-' + ('0' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('0' + date.getUTCDate()).slice(-2);
              input#flightDate.form-control(type="date", value=currentDate)
          .modal-footer
            button.btn.btn-secondary(type="button", data-dismiss="modal") Cancel
            button.btn.btn-primary(type="button", onclick="addFlight()") Submit
    #confirm-submit-flight-modal.modal.fade(
      tabindex="-1",
      role="dialog",
      aria-labelledby="confirmSubmitFlightLabel",
      aria-hidden="true"
    )
      .modal-dialog
        .modal-content
          .modal-header 
            h5 Confirm Submit Flight
          .modal-body 
            p Please take a moment to review your scoresheets, placings, consensus scores, and best of show submissions.
            p <strong>Once you click submit, you may no longer edit the flight or any of its scoresheets!</strong>
            p Are you sure you want to complete this flight?
            .form-check.pt-4
              input#user_verify_flight_submit.form-check-input(type="checkbox")
              label.form-check-label(for="user_verify_flight_submit") I confirm I have verified all flight information and am ready to submit
          .modal-footer
            input#flight-to-submit(value=null, hidden)
            button.btn.btn-secondary(
              type="button",
              data-dismiss="modal",
              onclick="clearFlightToSubmit()"
            ) Cancel
            button.btn.btn-primary(type="button", onclick="submitFlight();") Submit Flight

  script(src="/javascripts/download.js")

  script.
    const showAddFlightModal = () => {
    	$('#addFlightModal').modal('show')
    }

    const addFlight = () => {
    	const flightName = $('#flightName').val()
    	const flightLocation = $('#flightLocation').val()
    	const flightDate = new Date($('#flightDate').val())

    	fetch('/flight/add', {
    		method: 'POST',
    		headers: {
    			'Content-Type': 'application/json'
    		},
    		body: JSON.stringify({
    			flightName : flightName,
    			flightLocation : flightLocation,
    			flightDate : flightDate
    		})
    	}).then(response => {
    		if (response.status === 200) {
    			const body = response.json()
    			// instead of dynamically moving the flight to the other tab, we will be lazy and just reload the page. 
    			// This action is infrequent enough it shouldn't break immersion *too* much.
    			location.reload()

    		} else {
    			$('#addFlightModal').modal('hide')
    			// todo: handle errors
    		}
    	})
    }

    const confirmSubmitFlight = (flightId) => {
    	$('#flight-to-submit').val(flightId)
    	$('#confirm-submit-flight-modal').modal('show')
    }

    const clearFlightToSubmit = () => {
    	$('#flight-to-submit').val(null)
    	$('#user_verify_flight_submit').prop('checked', false)
    }

    const submitFlight = () => {
    	const userVerified = $('#user_verify_flight_submit').prop('checked')
    	if (!userVerified) return

    	const flightId = $('#flight-to-submit').val()
    	// To do: Submit flight here
    	fetch('/flight/submit', {
    		method: 'POST',
    		headers: {
    			'Content-Type': 'application/json'
    		},
    		body: JSON.stringify({
    			flightId: flightId
    		})
    	}).then(response => {
    		$('#confirm-submit-flight-modal').modal('hide')
    		$('#flight-to-submit').val(null)
    		$('#user_verify_flight_submit').prop('checked', false)

    		if (response.status === 200) {
    			const body = response.json()

    			// instead of dynamically moving the flight to the other tab, we will be lazy and just reload the page. 
    			// This action is infrequent enough it shouldn't break immersion *too* much.
    			location.reload()
    		} else {
    			// todo: handle errors
    			clearFlightToSubmit()
    		}
    	})
    }

    const updateScoresheet = (scoresheetId, param, newVal) => {
    	const requestBody = { 
    		id: scoresheetId,
    		_ajax: "true"
    	}
    	requestBody[param] = newVal

    	fetch('/scoresheet/update/', {
    		method: 'POST',
    		headers: {
    			'Content-Type': 'application/json'
    		},
    		body: JSON.stringify(requestBody)
    	}).then(response => {
    		//- const responseBody = response.json()
    	}).catch(err => {
    		window.alert('Error updating. Please try again.')
    		location.reload()
    	})
    }

    let addEntry = () => {} 
    let editEntry = () => {}
    let downloadPdf = () => {}

    $(document).ready(() => {
    	// on page load
    	addEntry = (flightId) => {
    		window.location.replace(`/scoresheet/edit?flightId=${flightId}`)
    	}

    	editEntry = (scoresheetId) => {
    		window.location.replace(`/scoresheet/edit?scoresheetId=${scoresheetId}`)
    	}

    	downloadPdf = (scoresheetId, scoresheetEntryNumber) => {
        $(`#download-${scoresheetId}`).prop("disabled", true)
        $(`#download-${scoresheetId}`).html('<span class="spinner-border spinner-border-sm mr-2" role="status" aria-hidden="true"></span>')

    		fetch('/scoresheet/pdf', {
    			method: 'POST',
    			headers: {
    				'Content-Type': 'application/json'
    			},
    			body: JSON.stringify({
    				scoresheetIds: [scoresheetId]
    			})
    		})
    		.then(res => res.json())
    		.then(res => {
          downloadHeartbeat(res.requestId, (blobData) => {
            download(blobData, `${scoresheetEntryNumber}.pdf`, 'application/pdf')
            $(`#download-${scoresheetId}`).prop("disabled", false)
            $(`#download-${scoresheetId}`).html('PDF')
          })
    		})
    	}

    	downloadAll = (scoresheetArray, flightId) => {
        fetch('/scoresheet/pdf', {
    			method: 'POST',
    			headers: {
    				'Content-Type': 'application/json'
    			},
    			body: JSON.stringify({
    				scoresheetIds: scoresheetArray.map(scoresheet => scoresheet.id),
    			})
    		})
    		.then(res => res.json())
    		.then(res => {
          $(`#download-all-${flightId}`).prop("disabled", true)
          $(`#download-all-${flightId}`).html(`<span class="spinner-border spinner-border-sm mr-2" role="status" aria-hidden="true"></span><span id="${res.requestId}">0%</span> Downloaded`)

          downloadHeartbeat(res.requestId, (blobData) => {
            if (scoresheetArray.length === 1) {
              download(blobData, `${scoresheetArray[0].entry_number}.pdf`, 'application/pdf')
            } else {
              download(blobData, 'scoresheets.zip', 'application/zip')
            }

            $(`#download-all-${flightId}`).prop("disabled", false)
            $(`#download-all-${flightId}`).html('Download All')
          })
    		})
    	}

      downloadHeartbeat = (requestId, completeCallback) => {
        const downloadHeartbeatIntervalId = setInterval(() => {
          fetch('/scoresheet/downloadstatus', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              requestId: requestId
            })
          })
          .then(res => {
            if (res.status === 202) {
              // Processing still in progress
              res.json().then(status => {
                $(`#${requestId}`).text((100*(status.completed / status.total)).toFixed() + '%')
              })
            } else if (res.status === 201) {
              // Processing complete, recieving file
              res.blob().then(blobData => {
                clearInterval(downloadHeartbeatIntervalId)
                completeCallback(blobData)
              })
            } else {
              // Something went wrong
              console.error('something went wrong', res.status)
            }
          })
        }, 1000)
      }
    })
