extends layout

block content
    form(role='form' action='/scoresheet/new', method='post', id="newScoresheet")
        //- Hidden form ID for backend usage
        input(type='text' id='fingerprint' name='fingerprint' hidden=true)
        .container
            div.card
                div.card-header
                    .row
                        .col-md
                            h4.card-title BJCP Soresheet
                            h6.card-subtitle.mb-2 Please fill this out
                        .col-md
                            .card-deck
                                .card.border-dark.mb-3.mx-1
                                    .card-header.px-0.py-0
                                        p.small.mb-0.text-center Mini BOS
                                    .card-body.text-dark.px-0.py-1.text-center
                                        .btn-group-toggle(data-toggle='buttons')
                                            label.btn.btn-outline-success.btn-sm Advance
                                                input(type='checkbox' autocomplete="off" id='mini_boss_advanced' name='mini_boss_advanced')
                                .card.border-dark.mb-3.mx-1
                                    .card-header.px-0.py-0 
                                        p.small.mb-0.text-center Consensus
                                    .card-body.text-dark.px-0.py-1.text-center 
                                        h4.my-0 -
                                .card.border-dark.mb-3.mx-1
                                    .card-header.px-0.py-0 
                                        p.small.mb-0.text-center Total Score
                                    .card-body.text-dark.px-0.py-1.text-center 
                                        h4(class='my-0' id='judge_total') 0


                        .col-md-auto
                            button(type="button" class="btn btn-primary" name='btn' value='Submit' id='submitBtn' data-toggle="modal" data-target="#confirm-submit") Submit
                    ul(class = 'nav nav-tabs card-header-tabs' id='scoresheet-list' role='tablist')
                        li(class='nav-item')
                            a(class='nav-link active px-2' data-toggle="tab" href='#information' role="tab" aria-controls="information" aria-selected="true" ) Information
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#aroma' role="tab" aria-controls="aroma" aria-selected="false") Aroma
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#appearance' role="tab" aria-controls="appearance" aria-selected="false" ) Appearance
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#flavor' role="tab" aria-controls="flavor" aria-selected="false" ) Flavor
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#mouthfeel' role="tab" aria-controls="mouthfeel" aria-selected="false" ) Mouthfeel
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#descriptors' role="tab" aria-controls="descriptors" aria-selected="false" ) Descriptors
                        li(class='nav-item')
                            a(class='nav-link px-2' data-toggle="tab" href='#summary' role="tab" aria-controls="summary" aria-selected="false" ) Summary
                div.card-body
                        div.tab-content
                            div(class = 'tab-pane active' id='information' role='tabpanel' name='information')
                                h4 Beer Information
                                .form-group
                                    .form-row.py-1
                                        .form-group.col-sm-2.col-form-label
                                            label(for='entry_number') Entry Number
                                        .form-group.col-sm-4
                                            input.form-control(type='text' id='entry_number' placeholder='Entry Number' name='entry_number')
                                        .form-group.col-sm-3.col-form-label.text-center.pl-4
                                            label(for='flight_position') Flight Position
                                        .form-group.col-sm-1.pr-0
                                            input.form-control(type='number' id='flight_position' name='flight_position' min='0')
                                        .form-group.col-sm-1.col-form-label.text-center
                                            label(for='flight_total') of
                                        .form-group.col-sm-1.pl-0
                                            input.form-control(type='number' id='flight_total' name='flight_total')
                                    //- .form-row.py-1
                                    //-     .form-group.col-sm-2.col-form-label
                                    //-         label(for='consensus_score') Consensus Score
                                    //-     .form-group.col-sm-4
                                    //-         input.form-control(type='number' id='consensus_score' name='consensus_score')
                                    //-     .form-group.col-sm-3.col-form-label
                                    //-         label(for='place') Place
                                    //-     .form-group.col-sm-1
                                    //-         input.form-control(type='number' id='place')
                                .form-group
                                    .form-row.py-1
                                        .form-group.col-sm-2.col-form-label
                                            label(for='category') BJCP Style
                                        .form-group.col-sm-2
                                            select.form-control(id='category' name='category')
                                                option(hidden disabled selected value)
                                                each val in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]
                                                    option= val
                                        .form-group.col-sm-2
                                            select.form-control(id='sub' name='sub')
                                                option(hidden disabled selected value)
                                                each val in ['A','B','C','D','E','F']
                                                    option= val
                                        .form-group.col
                                            input.form-control(type='text' id='subcategory' name='subcategory' placeholder='Subcategory Name (please spell out)')
                                .form-group
                                    .form-row.py-1
                                        .form-group.col-3.col-form-label
                                            .form-check
                                                input.form-check-input(type='checkbox' id='special_ingredients_select' name='special_ingredients_select')
                                                label.form-check-label(for='special_ingredients_select') Special Ingredients
                                        .form-group.col-9
                                            input.form-control(type='text' id='special_ingredients' name='special_ingredients' placeholder='List Special Ingredients')
                                .form-group
                                    .form-row.py-1
                                        .form-group.col-3.col-form-label
                                            .form-check
                                                input.form-check-input(type='checkbox' id='bottle_inspection' name='bottle_inspection')
                                                label.form-check-label(for='bottle_inspection') Bottle Acceptable
                                        .form-group.col-9
                                            input.form-control(type='text' id='bottle_inspection_comment' name='bottle_inspection_comment' placeholder='Bottle Comments')
                            div(class='tab-pane' id='aroma' role='tabpanel' aria-labelledby='aroma-tab')
                                .form-group
                                    h4 Malt Aroma
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="aroma_malt" name='aroma_malt' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='aroma_malt_inappropriate' name='aroma_malt_inappropriate')
                                                label.form-check-label(for='aroma_malt_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='aroma_malt_comment' name='aroma_malt_comment' placeholder='Comments')
                                .form-group
                                    h4 Hops Aroma
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="aroma_hops" name='aroma_hops' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='aroma_hops_inappropriate' name='aroma_hops_inappropriate')
                                                label.form-check-label(for='aroma_hops_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='aroma_hops_comment' name='aroma_hops_comment' placeholder='Comments')
                                .form-group
                                    h4 Fermentation Aroma
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="aroma_fermentation" name='aroma_fermentation' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='aroma_fermentation_inappropriate' name='aroma_fermentation_inappropriate')
                                                label.form-check-label(for='aroma_fermentation_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='aroma_fermentation_comment' name='aroma_fermentation_comment' placeholder='Comments')
                                .form-group
                                    .row
                                        .col
                                            h4 Other Flavor Comments
                                                textarea.form-control(rows='5' type='text' id='aroma_other_comment' name='aroma_other_comment' placeholder='Comments')
                                        .col.col-md-auto.d-flex.align-items-center.pl-4
                                            .card.border-dark(style='width:100px')
                                                .card-header.py-1
                                                    p.small.mb-0.text-center Aroma Score
                                                .card-body.text-dark.px-0.py-0.text-center 
                                                    input.form-control.form-control-lg.text-center.mb-0(type='number' id='aroma_score' name='aroma_score' value='0' min='0' max='12' onchange='recalculate_score()')
                                                    p.small.d-flex.align-items-end.flex-row-reverse.my-0.pb-0 /12       
                            div(class='tab-pane' id='appearance' role='tabpanel' aria-labelledby='appearance-tab')
                                .form-group
                                    h4 Color
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="appearance_color" name='appearance_color' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='appearance_color_inappropriate' name='appearance_color_inappropriate')
                                                label.form-check-label(for='appearance_color_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='appearance_color_other' name='appearance_color_other' placeholder='Comments')
                                .form-group
                                    h4 Clarity
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="appearance_clarity" name='appearance_clarity' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='appearance_clarity_inappropriate' name='appearance_clarity_inappropriate')
                                                label.form-check-label(for='appearance_clarity_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='appearance_clarity_other' name='appearance_clarity_other' placeholder='Comments')
                                .form-group
                                    h4 Head
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            h6 Color
                                            input(style='width:100%' id="appearance_head" name='appearance_head' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-2.pb-4
                                                input.form-check-input(type='checkbox' id='appearance_head_inappropriate' name='appearance_head_inappropriate')
                                                label.form-check-label(for='appearance_head_inappropriate') Inappropriate
                                            h6 Retention
                                            input(style='width:100%' id="appearance_retention" name='appearance_retention' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.py-2
                                                input.form-check-input(type='checkbox' id='appearance_retention_inappropriate' name='appearance_retention_inappropriate')
                                                label.form-check-label(for='appearance_retention_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='10' type='text' id='appearance_texture_comment' name='appearance_texture_comment' placeholder='Comments')
                                .form-group
                                    .row
                                        .col
                                            h4 Other Flavor Comments
                                                textarea.form-control(rows='5' type='text' id='appearance_other_comment' name='appearance_other_comment' placeholder='Comments')
                                        .col.col-md-auto.d-flex.align-items-center.pl-4
                                            .card.border-dark(style='width:100px')
                                                .card-header.py-1.px-0
                                                    p.small.mb-0.text-center Appearance Score
                                                .card-body.text-dark.px-0.py-0.text-center 
                                                    input.form-control.form-control-lg.text-center.mb-0(type='number' id='appearance_score' name='appearance_score' value='0' min='0' max='3' onchange='recalculate_score()')
                                                    p.small.d-flex.align-items-end.flex-row-reverse.my-0.pb-0 /3 
                            div(class='tab-pane' id='flavor' role='tabpanel' aria-labelledby='flavor-tab')
                                .form-group
                                    h4 Malt Flavor
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_malt" name='flavor_malt' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_malt_inappropriate' name='flavor_malt_inappropriate')
                                                label.form-check-label(for='flavor_malt_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_malt_comment' name='flavor_malt_comment' placeholder='Comments')
                                .form-group
                                    h4 Hop Flavor
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_hops" name='flavor_hops' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_hops_inappropriate' name='flavor_hops_inappropriate')
                                                label.form-check-label(for='flavor_hops_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_hops_comment' name='flavor_hops_comment' placeholder='Comments')
                                .form-group
                                    h4 Bitterness
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_bitterness" name='flavor_bitterness' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_bitterness_inappropriate' name='flavor_bitterness_inappropriate')
                                                label.form-check-label(for='flavor_bitterness_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_bitterness_comment' name='flavor_bitterness_comment' placeholder='Comments')
                                .form-group
                                    h4 Fermentation Flavors
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_fermentation" name='flavor_fermentation' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_fermentation_inappropriate' name='flavor_fermentation_inappropriate')
                                                label.form-check-label(for='flavor_fermentation_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_fermentation_comment' name='flavor_fermentation_comment' placeholder='Comments')
                                .form-group
                                    h4 Flavor Balance
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_balance" name='flavor_balance' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_balance_inappropriate' name='flavor_balance_inappropriate')
                                                label.form-check-label(for='flavor_balance_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_balance_comment' name='flavor_balance_comment' placeholder='Comments')
                                .form-group
                                    h4 Finish / Aftertaste
                                    .form-row.py-1
                                        .form-group.col-sm-6.col-form-label.px-4
                                            input(style='width:100%' id="flavor_finish_aftertaste" name='flavor_finish_aftertaste' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                            //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                            //- .form-group.col-sm-3.col-form-label
                                            .form-check.pt-4
                                                input.form-check-input(type='checkbox' id='flavor_finish_aftertaste_inappropriate' name='flavor_finish_aftertaste_inappropriate')
                                                label.form-check-label(for='flavor_finish_aftertaste_inappropriate') Inappropriate
                                        .form-group.col-sm-6
                                            textarea.form-control(rows='5' type='text' id='flavor_finish_aftertaste_comment' name='flavor_finish_aftertaste_comment' placeholder='Comments')
                                .form-group
                                    .row
                                        .col
                                            h4 Other Flavor Comments
                                                textarea.form-control(rows='5' type='text' id='flavor_other_comment' name='flavor_other_comment' placeholder='Comments')
                                        .col.col-md-auto.d-flex.align-items-center.pl-4
                                            .card.border-dark(style='width:100px')
                                                .card-header.py-1.px-0
                                                    p.small.mb-0.text-center Flavor Score
                                                .card-body.text-dark.px-0.py-0.text-center 
                                                    input.form-control.form-control-lg.text-center.mb-0(type='number' id='flavor_score' name='flavor_score' value='0' min='0' max='20' onchange='recalculate_score()')
                                                    p.small.d-flex.align-items-end.flex-row-reverse.my-0.pb-0 /20       
                            div(class='tab-pane' id='mouthfeel' role='tabpanel' aria-labelledby='mouthfeel-tab')
                                .form-group.px-5
                                    h4 Body
                                    input(style='width:100%' id="mouthfeel_body" name='mouthfeel_body' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                    //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                    //- .form-group.col-sm-3.col-form-label
                                    .form-check.pt-4
                                        input.form-check-input(type='checkbox' id='mouthfeel_body_inappropriate' name='mouthfeel_body_inappropriate')
                                        label.form-check-label(for='mouthfeel_body_inappropriate') Inappropriate
                                .form-group.px-5
                                    h4 Carbonation
                                    input(style='width:100%' id="mouthfeel_carbonation" name='mouthfeel_carbonation' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                    //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                    //- .form-group.col-sm-3.col-form-label
                                    .form-check.pt-4
                                        input.form-check-input(type='checkbox' id='mouthfeel_carbonation_inappropriate' name='mouthfeel_carbonation_inappropriate')
                                        label.form-check-label(for='mouthfeel_carbonation_inappropriate') Inappropriate
                                .form-group.px-5
                                    h4 Warmth
                                    input(style='width:100%' id="mouthfeel_warmth" name='mouthfeel_warmth' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                    //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                    //- .form-group.col-sm-3.col-form-label
                                    .form-check.pt-4
                                        input.form-check-input(type='checkbox' id='mouthfeel_warmth_inappropriate' name='mouthfeel_warmth_inappropriate')
                                        label.form-check-label(for='mouthfeel_warmth_inappropriate') Inappropriate
                                .form-group.px-5
                                    h4 Creaminess
                                    input(style='width:100%' id="mouthfeel_creaminess" name='mouthfeel_creaminess' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                    //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                    //- .form-group.col-sm-3.col-form-label
                                    .form-check.pt-4
                                        input.form-check-input(type='checkbox' id='mouthfeel_creaminess_inappropriate' name='mouthfeel_creaminess_inappropriate')
                                        label.form-check-label(for='mouthfeel_creaminess_inappropriate') Inappropriate
                                .form-group.px-5
                                    h4 Astringency
                                    input(style='width:100%' id="mouthfeel_astringency" name='mouthfeel_astringency' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                    //- button(type='button' class='btn btn-danger btn-small' data-toggle='button' aria-pressed='false' autocomplete='off') Inappropriate
                                    //- .form-group.col-sm-3.col-form-label
                                    .form-check.pt-4
                                        input.form-check-input(type='checkbox' id='mouthfeel_astringency_inappropriate' name='mouthfeel_astringency_inappropriate')
                                        label.form-check-label(for='mouthfeel_astringency_inappropriate') Inappropriate
                                .form-group
                                    .row
                                        .col
                                            h4 Other Mouthfeel Comments
                                                textarea.form-control(rows='5' type='text' id='mouthfeel_other_comment' name='mouthfeel_other_comment' placeholder='Comments')
                                        .col.col-md-auto.d-flex.align-items-center.pl-4
                                            .card.border-dark(style='width:100px')
                                                .card-header.py-1.px-0
                                                    p.small.mb-0.text-center Mouthfeel Score
                                                .card-body.text-dark.px-0.py-0.text-center 
                                                    input.form-control.form-control-lg.text-center.mb-0(type='number' id='mouthfeel_score' name='mouthfeel_score' value='0' min='0' max='10' onchange='recalculate_score()')
                                                    p.small.d-flex.align-items-end.flex-row-reverse.my-0.pb-0 /10       
                            div(class='tab-pane' id='descriptors' role='tabpanel' aria-labelledby='descriptors-tab')
                                .list-group
                                    input(type='checkbox' value='false' id='descriptor_acetaldehyde' name='descriptor_acetaldehyde')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_acetaldehyde') Acetaldehyde
                                        //- a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Acetaldehyde" data-content="Green apple-like aroma and flavor") i
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Acetaldehyde" data-content="Green apple-like aroma and flavor") i
                                    input(type='checkbox' value='false' id='descriptor_alcoholic' name='descriptor_alcoholic')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_alcoholic') Alcoholic
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Alcoholic" data-content="The aroma, flavor, and warming effect of ethanol and higher alcohols. Sometimes described as hot.") i
                                    input(type='checkbox' value='false' id='descriptor_astringent' name='descriptor_astringent')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_astringent') Astringent
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Astringent" data-content="Puckering, lingering harshness and/or dryness in the finish/aftertaste; harsh graininess; huskiness.") i
                                    input(type='checkbox' value='false' id='descriptor_diacetyl' name='descriptor_diacetyl')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_diacetyl') Diacetyl
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Diacetyl" data-content="Artificial butter, butterscotch, or toffee aroma and flavor. Sometimes perceived as a slickness on the tongue.") i
                                    input(type='checkbox' value='false' id='descriptor_dms' name='descriptor_dms')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_dms') DMS (Dimethyl Sulfide)
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="DMS (dimethyl sulfide)" data-content="At low levels a sweet, cooked or canned corn-like aroma and flavor.") i
                                    input(type='checkbox' value='false' id='descriptor_estery' name='descriptor_estery')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_estery') Estery
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Estery" data-content="Aroma and/or flavor of any ester (fruits, fruit flavorings, or roses)") i
                                    input(type='checkbox' value='false' id='descriptor_grassy' name='descriptor_grassy')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_grassy') Grassy
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Grassy" data-content="Aroma/flavor of fresh-cut grass or green leaves.") i
                                    input(type='checkbox' value='false' id='descriptor_lightstruck' name='descriptor_lightstruck')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_lightstruck') Light-Struck
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Light-Struck" data-content="Similar to the aroma of a skunk.") i
                                    input(type='checkbox' value='false' id='descriptor_metallic' name='descriptor_metallic')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_metallic') Metallic
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Metallic" data-content="Tinny, coiny, copper, iron, or blood-like flavor.") i
                                    input(type='checkbox' value='false' id='descriptor_musty' name='descriptor_musty')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_musty') Musty
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Musty" data-content="Stale, musty, or moldy aromas/flavors.") i
                                    input(type='checkbox' value='false' id='descriptor_oxidized' name='descriptor_oxidized')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_oxidized') Oxidized
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Oxidized" data-content="Any one or combination of stale, winy/vinous, cardboard, papery, or sherry-like aromas and flavors.") i
                                    input(type='checkbox' value='false' id='descriptor_phenolic' name='descriptor_phenolic')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_phenolic') Phenolic
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Phenolic" data-content="Spicy (clove, pepper), smoky, plastic, plastic adhesive strip, and/or medicinal (chlorophenolic).") i
                                    input(type='checkbox' value='false' id='descriptor_solvent' name='descriptor_solvent')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_solvent') Solvent
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Solvent" data-content="Aromas and flavors of higher alcohols (fusel alcohols). Similar to acetone or lacquer thinner aromas.") i
                                    input(type='checkbox' value='false' id='descriptor_sour' name='descriptor_sour')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_sour') Sour/Acidic
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Sour/Acidic" data-content="Tartness in aroma and flavor. Can be sharp and clean (lactic acid), or vinegar-like (acetic acid).") i
                                    input(type='checkbox' value='false' id='descriptor_sulfur' name='descriptor_sulfur')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_sulfur') Sulfur
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Sulfur" data-content="The aroma of rotten eggs or burning matches.") i
                                    input(type='checkbox' value='false' id='descriptor_vegetal' name='descriptor_vegetal')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_vegetal') Vegetal
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Yeasty" data-content="Cooked, canned, or rotten vegetable aroma and flavor (cabbage, onion, celery, asparagus, etc.)") i
                                    input(type='checkbox' value='false' id='descriptor_yeasty' name='descriptor_yeasty')
                                    label.list-group-item.d-flex.justify-content-between.align-items-center(for='descriptor_yeasty') Yeasty
                                        a.badge.badge-light.badge-pill(tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Yeasty" data-content="A bready, sulfury or yeast-like aroma or flavor") i
                            div(class='tab-pane' id='summary' role='tabpanel' aria-labelledby='summary-tab')
                                .form-group.px-5
                                    h4 Style Accuracy
                                    input(style='width:100%' id="overall_class_example" name='overall_class_example' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                .form-group.px-5
                                    h4 Execution
                                    input(style='width:100%' id="overall_flawless" name='overall_flawless' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                .form-group.px-5
                                    h4 Overall Opinion
                                    input(style='width:100%' id="overall_wonderful" name='overall_wonderful' type="text" data-slider-ticks="[0, 10, 50, 100]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels="['None','Low','Med','High']")
                                .form-group
                                    .row
                                        .col
                                            h4 Feedback
                                                textarea.form-control(rows='5' type='text' id='feedback_comment' name='feedback_comment' placeholder='Comments')
                                        .col.col-md-auto.d-flex.align-items-center.pl-4
                                            .card.border-dark(style='width:100px')
                                                .card-header.py-1.px-0
                                                    p.small.mb-0.text-center Summary Score
                                                .card-body.text-dark.px-0.py-0.text-center 
                                                    input.form-control.form-control-lg.text-center.mb-0(type='number' id='overall_score' name='overall_score' value='0' min='0' max='5' onchange='recalculate_score()')
                                                    p.small.d-flex.align-items-end.flex-row-reverse.my-0.pb-0 /5

        .modal.fade(id='confirm-submit' tabindex='-1' role="dialog" aria-labelledby="myModalLabel" aria-hidden="true")  
            .modal-dialog
                .modal-content
                    .modal-header Confirm Scoresheet Submission
                    .modal-body Are you sure you want to submit this scoresheet?
                    .modal-footer
                        button(type="button" class="btn btn-secondary" data-dismiss='modal') Cancel
                        button(type='submit' class='btn btn-primary') Submit

    script.
        $("[data-toggle=popover]").popover();
        //- Aroma Sliders
        var slider = new Slider("#aroma_malt", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#aroma_hops", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#aroma_fermentation", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });

        //- Appearance Sliders
        var slider = new Slider("#appearance_color", {
            ticks: [0, 20, 40, 60, 80, 100],
            ticks_positions: [0, 20, 40, 60, 80, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Yellow</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Gold</p>', '<p style="transform: translateY(16px) rotate(270deg);transform-origin: center;">Amber</p>', '<p style="transform: translateY(16px) rotate(270deg);transform-origin: center;">Copper</p>', '<p style="transform: translateY(14px) rotate(270deg);transform-origin: center;">Brown</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Black</p>'],
            ticks_snap_bounds: 3,
            value: 40
        });
        var slider = new Slider("#appearance_clarity", {
            ticks: [0, 50, 100],
            ticks_positions: [0, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(18px) rotate(270deg);transform-origin: center;">Brilliant</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Hazy</p>', '<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Opaque</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#appearance_head", {
            ticks: [0, 25, 50, 75, 100],
            ticks_positions: [0, 25, 50, 75, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">White</p>', '<p style="transform: translateY(12px) rotate(270deg);transform-origin: center;">Ivory</p>', '<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Beige</p>', '<p style="transform: translateY(8px) rotate(270deg);transform-origin: center;">Tan</p>', '<p style="transform: translateY(14px) rotate(270deg);transform-origin: center;">Brown</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#appearance_retention", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });

        //- Flavor Sliders
        var slider = new Slider("#flavor_malt", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#flavor_hops", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#flavor_bitterness", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#flavor_fermentation", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#flavor_balance", {
            ticks: [0, 100],
            ticks_positions: [0, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Hoppy</p>', '<p style="transform: translateY(12px) rotate(270deg);transform-origin: center;">Malty</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#flavor_finish_aftertaste", {
            ticks: [0, 100],
            ticks_positions: [0, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(7px) rotate(270deg);transform-origin: center;">Dry</p>', '<p style="transform: translateY(12px) rotate(270deg);transform-origin: center;">Sweet</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });

        //- Mouthfeel Sliders
        var slider = new Slider("#mouthfeel_body", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Thin</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Full</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#mouthfeel_carbonation", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#mouthfeel_warmth", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#mouthfeel_creaminess", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#mouthfeel_astringency", {
            ticks: [0, 10, 50, 100],
            ticks_positions: [0, 10, 50, 100],
            //- ticks_labels: ['None','Low','Med','High'],
            ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">None</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Low</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">Med</p>', '<p style="transform: translateY(10px) rotate(270deg);transform-origin: center;">High</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });

        //- Summary Sliders
        var slider = new Slider("#overall_class_example", {
            ticks: [0, 100],
            ticks_positions: [0, 100],
            ticks_labels: ['Not to Style', 'Classic Example'],
            //- ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Classic\nExample</p>', '<p style="transform: translateY(14px) rotate(270deg);transform-origin: center;">Not to\nStyle</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#overall_flawless", {
            ticks: [0, 100],
            ticks_positions: [0, 100],
            ticks_labels: ['Significant Flaws', 'Flawless'],
            //- ticks_labels: ['<p style="transform: translateY(15px) rotate(270deg);transform-origin: center;">Flawless</p>', '<p style="transform: translateY(18px) rotate(270deg);transform-origin: center;">Significant/nFlaws</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });
        var slider = new Slider("#overall_wonderful", {
            ticks: [0, 100],
            ticks_positions: [0, 100],
            ticks_labels: ['Lifeless', 'Wonderful'],
            //- ticks_labels: ['<p style="transform: translateY(16px) rotate(270deg);transform-origin: center;">Wonderful</p>', '<p style="transform: translateY(16px) rotate(270deg);transform-origin: center;">Lifeless</p>'],
            ticks_snap_bounds: 3,
            value: 50
        });

        //- Update all sliders
        slider.refresh();

        //- Recalculate total score
        function recalculate_score() {
            var aroma = document.getElementById('aroma_score').value
            var appearance = document.getElementById('appearance_score').value
            var flavor = document.getElementById('flavor_score').value
            var mouthfeel = document.getElementById('mouthfeel_score').value
            var summary = document.getElementById('overall_score').value
            document.getElementById('judge_total').innerText = String(Number(aroma) + Number(appearance) + Number(flavor) + Number(mouthfeel) + Number(summary));
        }

        $(document).ready(function() {
            //- On form load see if there is an existing sheet to populate data
            var fp = $('form#newScoresheet input#fingerprint').val();
            if (fp !== "" ) {
                $.post('/scoresheet/check', {fingerprint: $('form#newScoresheet input#fingerprint').val()}, function (data) {
                    if (data) {
                        console.log(data);
                    }
                });
            }

            //- On form change we save it back to the system
            var origForm = $('form#newScoresheet').serialize();
            $('form#newScoresheet :input').change(function () {
                var fData = $('form#newScoresheet').serialize();
                if (origForm !== fData) {
                    //- We have changes to the form save them back
                    $.post('/scoresheet/change', fData, function (data) {
                        $('form#newScoresheet input#fingerprint').val(data.fingerprint);
                    });
                    //- Reset the base data comparison
                    origForm = fData;
                }
            });

            $('div#descriptors input:checkbox').on('change', function() {
                if ($(this).is(':checked')) {
                    $(this).attr('value', 'true');
                } else {
                    $(this).attr('value', 'false');
                }
            });
        });