extends layout

block content
  .container.ml-auto.mr-auto(style="max-width:500px;")
    if typeof(error) !== "undefined" && error.length > 0
      p.text-danger
        strong Error(s)!
        each val in error
          p.text-danger= val
    .form-group
      .form-row
        .col-md-3
          h4 Email
        .col-md-9
          sub.form-text.text-subdued.py-2.float-right (This is also your username)
      .form-row
        label.col-sm-4.col-form-label(for="set_new_username") Current Email
        .col-sm-8
          .input-group 
            input#set_new_username.form-control(
              type="text",
              name="set_new_username",
              placeholder="Email Address",
              value=typeof user === 'undefined' ? '' : user.email,
              disabled=user
            )
            .input-group-append
              button.btn.btn-outline-secondary(
                data-toggle="modal",
                data-target="#changeEmailModal"
              ) Edit
      .form-row.mt-1.ml-5
        .col-sm-4
        .col-sm-8
          input#allow_automated_email.form-check-input(
            type="checkbox",
            name="allow_automated_email",
            value="true",
            checked=user.allow_automated_email
          )
          label.form-check-label(for="allow_automated_email") Allow Email Communication
    .form-group
      .form-row
        .col-md-3
          h4 Password
      .form-row
        label.col-sm-4.col-form-label(for="set_new_password") Current Password
        .col-sm-8
          .input-group 
            input#set_new_password.form-control(
              type="password",
              name="set_new_password",
              placeholder="Password",
              value=typeof user === 'undefined' ? '' : 'fAkEpAs$w0rD',
              disabled=user
            )
            .input-group-append
              button.btn.btn-outline-secondary(
                data-toggle="modal",
                data-target="#changePasswordModal"
              ) Edit
    .form-group
      .form-row
        h4 User Information
      .form-row
        label.col-sm-4.col-form-label(for="firstname") First Name
        .col-sm-8
          input#firstname.form-control(
            type="text",
            name="firstname",
            placeholder="First Name",
            value=typeof user === 'undefined' ? '' : user.firstname
          )
      .form-row
        label.col-sm-4.col-form-label(for="lastname") Last Name
        .col-sm-8
          input#lastname.form-control(
            type="text",
            name="lastname",
            placeholder="Last Name",
            value=typeof user === 'undefined' ? '' : user.lastname
          )
    .form-group
      .form-row
        .col-md-6
          h4 Qualifications
        .col-md-6
          sub.form-text.text-subdued.py-2.float-right
      .form-row
        label.col-sm-4.col-form-label(for="bjcp_id") BJCP ID
        .col-sm-8
          input#bjcp_id.form-control(
            type="text",
            name="bjcp_id",
            placeholder="BJCP ID",
            value=typeof user === 'undefined' ? '' : user.bjcp_id
          )
      .form-row
        label.col-sm-4.col-form-label(for="bjcp_rank") BJCP Rank
        .col-sm-8
          select#bjcp_rank.form-control(name="bjcp_rank")
            option(value=null, selected) N/A
            option(
              value="Recognized",
              selected=user.bjcp_rank === 'Recognized'
            ) BJCP Recognized
            option(value="Certified", selected=user.bjcp_rank === 'Certified') BJCP Certified
            option(value="National", selected=user.bjcp_rank === 'National') BJCP National
            option(value="Master", selected=user.bjcp_rank === 'Master') BJCP Master
            option(
              value="GrandMaster",
              selected=user.bjcp_rank === 'GrandMaster'
            ) BJCP Grand Master
            option(
              value="Apprentice",
              selected=user.bjcp_rank === 'Apprentice'
            ) BJCP Apprentice
            option(
              value="Affiliated",
              selected=user.bjcp_rank === 'Affiliated'
            ) BJCP Affiliated
      .form-row
        label.col-sm-4.col-form-label(for="cicerone_rank") Cicerone Rank
        .col-sm-8
          select#cicerone_rank.form-control(name="cicerone_rank")
            option(value=null, selected) N/A
            option(value="level1", selected=user.cicerone_rank === 'level1') Level 1 - Certified Beer Server
            option(value="level2", selected=user.cicerone_rank === 'level2') Level 2 - Certified Cicerone
            option(value="level3", selected=user.cicerone_rank === 'level3') Level 3 - Advanced Cicerone
            option(value="level4", selected=user.cicerone_rank === 'level4') Level 4 - Master Cicerone
      .form-row
        label.col-sm-4.col-form-label(for="pro_brewer_brewery") Pro Brewer
        .col-sm-8
          input#pro_brewer_brewery.form-control(
            type="text",
            name="pro_brewer_brewery",
            placeholder="Brewery Name",
            value=typeof user === 'undefined' ? '' : user.pro_brewer_brewery
          )
      .form-row
        label.col-sm-4.col-form-label(for="industry_description") Industry
        .col-sm-8
          input#industry_description.form-control(
            type="text",
            name="industry_description",
            placeholder="Industry Description",
            value=typeof user === 'undefined' ? '' : user.industry_description
          )
      .form-row
        label.col-sm-4.col-form-label(for="judging_years") Judging Years
        .col-sm-8
          input#judging_years.form-control(
            type="number",
            name="judging_years",
            placeholder="Judging Years",
            value=typeof user === 'undefined' ? '' : user.judging_years
          )
    .form-group
      button.btn.btn-lg.btn-primary.btn-block(onclick="updateProfile()") Save Profile

    #changeEmailModal.modal.fade(
      tabindex="-1",
      role="dialog",
      aria-labelledby="changeEmailModalLabel",
      aria-hidden="true"
    )
      .modal-dialog
        .modal-content
          .modal-header 
            h5 Update Email
          .modal-body
            .form-group
              label(for="existingEmail") Current Email
              input#existingEmail.form-control(
                type="text",
                placeholder="Old Email"
              )
            .form-group
              label(for="newEmail") New Email Address
              input#newEmail.form-control(
                type="text",
                placeholder="Updated Email"
              )
            .form-group
              label(for="confirmEmail") Confirm New Email Address
              input#confirmEmail.form-control(
                type="text",
                placeholder="Confirm Updated Email"
              )

          .modal-footer
            button.btn.btn-secondary(type="button", data-dismiss="modal") Cancel
            button.btn.btn-primary(type="button", onclick="updateEmail();") Submit

    #changePasswordModal.modal.fade(
      tabindex="-1",
      role="dialog",
      aria-labelledby="changePasswordModalLabel",
      aria-hidden="true"
    )
      .modal-dialog
        .modal-content
          .modal-header 
            h5 Update Password
          .modal-body
            .form-group
              label(for="existingPassword") Current Password
              input#existingPassword.form-control(
                type="password",
                placeholder="Old Password"
              )
            .form-group
              label(for="newPassword") New Password
              input#newPassword.form-control(
                type="password",
                placeholder="Updated Password"
              )
            .form-group
              label(for="confirmPassword") Confirm New Password
              input#confirmPassword.form-control(
                type="password",
                placeholder="Confirm Updated Password"
              )

          .modal-footer
            button.btn.btn-secondary(type="button", data-dismiss="modal") Cancel
            button.btn.btn-primary(type="button", onclick="updatePassword();") Submit
  script.
    let updateEmail = () => {}
    let updatePassword = () => {}
    let updateProfile = () => {}

    $(document).ready(() => {
    	// FETCH call for updating email address
    	updateEmail = () => {
    		const existingEmail = $('#existingEmail').val()
    		const newEmail = $('#newEmail').val()
    		const confirmNewEmail = $('#confirmEmail').val()

    		if (newEmail !== confirmNewEmail) {
    			$('#newEmail').addClass('is-invalid')
    			$('#confirmEmail').addClass('is-invalid')
    			return
    		} else {
    			$('#newEmail').removeClass('is-invalid')
    			$('#confirmEmail').removeClass('is-invalid')
    		}

    		const requestBody = {
    			oldEmail : existingEmail,
    			newEmail : newEmail
    		}

    		fetch('/profile/email', {
    			method: 'POST',
    			headers: {
    				'Content-Type': 'application/json'
    			},
    			body: JSON.stringify(requestBody)
    		}).then(response => {
    			if (response.status === 200) {
    				window.alert('Email successfully updated!\n\nYou will need to verify your new email. Please check your inbox and click the link in the verification email.')
            $('#set_new_username').val(newEmail)
    				$('#changeEmailModal').modal('hide')
    				$('#existingEmail').val('')
    				$('#newEmail').val('')
    				$('#confirmEmail').val('')
    				$('#newEmail').removeClass('is-invalid')
    				$('#confirmEmail').removeClass('is-invalid')
    			} else {
    				// Handle Errors Here for 400 / 500 status
    				window.alert('Error updating. Please try again.')
    				location.reload()
    			}
    		}).catch(err => {
    			window.alert('Error updating. Please try again.')
    			location.reload()
    		})
    	}

    	// Fetch call for updating password
    	updatePassword = () => {
    		const existingPassword = $('#existingPassword').val()
    		const newPassword = $('#newPassword').val()
    		const confirmNewPassword = $('#confirmPassword').val()

    		if (newPassword !== confirmNewPassword) {
    			$('#newPassword').addClass('is-invalid')
    			$('#confirmPassword').addClass('is-invalid')
    			return
    		} else {
    			$('#newPassword').removeClass('is-invalid')
    			$('#confirmPassword').removeClass('is-invalid')
    		}

    		const requestBody = {
    			oldPassword : existingPassword,
    			newPassword : newPassword
    		}

    		fetch('/profile/password', {
    			method: 'POST',
    			headers: {
    				'Content-Type': 'application/json'
    			},
    			body: JSON.stringify(requestBody)
    		}).then(response => {
    			if (response.status === 200) {
    				window.alert('Password successfully changed!')
    				$('#changePasswordModal').modal('hide')
    				$('#existingPassword').val('')
    				$('#newPassword').val('')
    				$('#confirmPassword').val('')
    				$('#newPassword').removeClass('is-invalid')
    				$('#confirmPassword').removeClass('is-invalid')
    			} else {
    				// Handle Errors Here for 400 / 500 status
    				window.alert('Error updating. Please try again.')
    				location.reload()
    			}
    		}).catch(err => {
    			window.alert('Error updating. Please try again.')
    			location.reload()
    		})
    	}

    	// Fetch call for updating profile
    	updateProfile = () => {
    		const requestBody = {
    			firstname : $('#firstname').val(),
    			lastname : $('#lastname').val(),
    			bjcp_id : $('#bjcp_id').val(),
    			bjcp_rank : $('#bjcp_rank').val(),
    			cicerone_rank : $('#cicerone_rank').val(),
    			pro_brewer_brewery : $('#pro_brewer_brewery').val(),
    			industry_description : $('#industry_description').val(),
    			judging_years : $('#judging_years').val(),
          allow_automated_email : $('#allow_automated_email').is(':checked')
    		}

    		fetch('/profile/edit', {
    			method: 'POST',
    			headers: {
    				'Content-Type': 'application/json'
    			},
    			body: JSON.stringify(requestBody)
    		}).then(response => {
    			if (response.status === 200) {
    				window.alert('Profile updated succesfully!\n\nYou may need to log out and log back in to see your changes.')
    			} else {
    				window.alert('Error updating. Please try again.')
    				location.reload()
    			}
    		}).catch(err => {
    			window.alert('Error updating. Please try again.')
    			location.reload()
    		})
    	}
    })
